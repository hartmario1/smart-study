/// <reference types="node" />
export declare type MessageCallback = (...args: any[]) => string;
export declare const makeCordisError: <K extends string>(base: ErrorConstructor, messages: Record<K, string | MessageCallback>) => {
    new (key: K, ...args: any[]): {
        stack: string;
        code: K;
        readonly name: string;
        message: string;
    };
    captureStackTrace(targetObject: object, constructorOpt?: Function | undefined): void;
    prepareStackTrace?: ((err: Error, stackTraces: NodeJS.CallSite[]) => any) | undefined;
    stackTraceLimit: number;
};
export default makeCordisError;
//# sourceMappingURL=index.d.ts.map